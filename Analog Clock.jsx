/*doc = app.activeDocument;var totalLayers = doc.layers.length;Window.alert ("Let's do this!", "Welcome")for(var l in totalLayers) {            } *///var docRef = app.activeDocument;//new Path.Line(new Point(0, 0), new Point(0, 90));/*var win = new Window('dialog', 'Plugin');win.show();*///var p1 = new Point(0,0);/*var dlg = new Window('dialog', 'Select Path Items:'); dlg.location = [500,50];*///new Window('dialog', new Date().getHours());//dlg.group = dlg.add('group', undefined, 'Object group:');//(dlg.group.selectLT = dlg.group.add('radiobutton', [15,15,95,35], 'Smaller than' )).helpTip = "Select all  Path Items\nSmaller than\n the Slider Value."; //dlg.show();/*    1.0     Release    1.01    Changed the output coordinates to the center of the active artboard.    2.0     Rewrote the script in jsx for the newer versions of Illustrator.*/var version = '2.0',    scriptName = 'dViz: Analog Clock' + ' ' + versionvar values = {	HOURS: new Date().getHours(),	MINUTES: new Date().getMinutes(),	SECONDS: new Date().getSeconds(),	RADIUS: 50,	DRAW_HOURS: true,	USE_SECONDS: false,	GET_TIME: 'Click',	DRAW_CLOCK: 'Click',}if (app.documents.length > 0) {    var doc = app.activeDocument;    var h = 10,        m = 15,        s = 0,        r = 20,        useSec = false,        drwHrs = true;    var drawStyle = {            strokeWidth: r / 20,            strokeColor: '#000000',             strokeCap: 'round',            fillColor: null },        //group = doc.groupItems.add(),                clockFace = doc.activeLayer.pathItems.ellipse(doc.activeView.centerPoint[1] + r, doc.activeView.centerPoint[0] - r, r * 2, r * 2);                hArmPath = doc.activeLayer.pathItems.rectangle(doc.activeView.centerPoint[1], doc.activeView.centerPoint[0], r * 0.5, 0.1);        hArmPath.rotate(30 * (h % 12 + m / 60) - 90, true, false, false, false, Transformation.BOTTOMLEFT);                mArmPath = doc.activeLayer.pathItems.rectangle(doc.activeView.centerPoint[1], doc.activeView.centerPoint[0], r * 0.8, 0.1);        mArmPath.rotate(6 * m - 90, true, false, false, false, Transformation.BOTTOMLEFT);                if (useSec) {            sArmPath = doc.activeLayer.pathItems.rectangle(doc.activeView.centerPoint[1], doc.activeView.centerPoint[0], r * 0.8, 0.1);            sArmPath.rotate(6 * s - 90, true, false, false, false, Transformation.BOTTOMLEFT);            }/*    hArmPath = new Path.Line(centerPoint, centerPoint + new Point({ length: r * 0.5, angle: 30 * (h % 12 + m / 60) - 90 })),    mArmPath = new Path.Line(centerPoint, centerPoint + new Point({ length: r * 0.8, angle: 6 * m - 90 }))    if(useSec){        var sArmPath = new Path.Line(centerPoint, centerPoint + new Point({ length: r * 0.8, angle: 6 * s - 90 }))        sArmPath.style = drawStyle        group.appendTop(sArmPath)    }    //clockFace.style = drawStyle    drawStyle.strokeWidth = r / 8    hArmPath.style = drawStyle    mArmPath.style = drawStyle    if(drwHrs){        var counter = 0        while(counter < 12){            var rimPoint = centerPoint + new Point({ length: r, angle: 90 + counter * 30}),                hubPoint = centerPoint + new Point({ length: (counter % 3 == 0 ? 0.87 : 0.92) * r, angle: 90 + counter * 30}),                hourMark = new Path.Line(rimPoint, hubPoint)                drawStyle.strokeWidth = counter % 3 == 0 ? r / 18 : r / 25            drawStyle.strokeCap = 'butt'            hourMark.style = drawStyle            group.appendTop(hourMark)            counter++        }    }    group.appendBottom(clockFace)    group.appendTop(hArmPath)    group.appendTop(mArmPath)    group.name = 'Clock ' + (h < 10 ? '0' + h : h) + ':' + (m < 10 ? '0' + m : m) + (useSec ? (s < 10 ? ':0' + s : ':' + s) : '')    */} else {    Window.alert("You must open at least one document to run this script.");}